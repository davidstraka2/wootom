name: 'WooWoo'
scopeName: 'text.woo'
fileTypes: ['woo']
limitLineLength: false

patterns: [
    {include: '#inlineComment'}
    {include: '#partHeading'}
    {include: '#object'}
    {include: '#outerEnvironment'}
    {include: '#outerEnvironmentFragile'}
    {include: '#innerEnvironmentShort'}
    {include: '#innerEnvironmentVerbose'}
    {include: '#annotation'}
    {include: '#reference'}
    {include: '#indexedReference'}
    {include: '#inlineMath'}
    {include: '#tailMetablocks'}
]

repository:
    inlineComment: {
        match: '^\\s*%.*'
        name: 'comment.line.woo'
    }
    partHeading: {
        begin: '^(\\.)([A-Z]\\w*)[^\\S\\r\\n]+(.+)'
        beginCaptures:
            1: name: 'keyword.operator.foo'
            2: name: 'markup.heading.foo'
            3:
                patterns: [
                    {include: '#innerEnvironmentShort'}
                    {include: '#innerEnvironmentVerbose'}
                    {include: '#inlineMath'}
                ]
        end: '^\\s*$'
        patterns: [{include: '#yamlMetablock'}]
    }
    yamlMetablock: {
        patterns: [{include: 'source.yaml'}]
    }
    object: {
        begin: '^\\s*(\\.)([A-Z]\\w*)(:)[^\\S\\r\\n]*$'
        beginCaptures:
            1: name: 'keyword.operator.foo'
            2: name: 'storage.type.foo'
            3: name: 'keyword.operator.foo'
        end: '^\\s*$'
        patterns: [{include: '#yamlMetablock'}]
    }
    outerEnvironment: {
        begin: '^\\s*(\\.)([a-z]\\w*)(:)[^\\S\\r\\n]*$'
        beginCaptures:
            1: name: 'keyword.operator.foo'
            2: name: 'storage.type.foo'
            3: name: 'keyword.operator.foo'
        end: '^\\s*$'
        patterns: [{include: '#yamlMetablock'}]
    }
    outerEnvironmentFragile: {
        begin: '^\\s*(!)([a-z]\\w*)(:)[^\\S\\r\\n]*$'
        beginCaptures:
            1: name: 'keyword.operator.foo'
            2: name: 'storage.type.foo'
            3: name: 'keyword.operator.foo'
        end: '^\\s*$'
        patterns: [{include: '#yamlMetablock'}]
    }
    innerEnvironmentShort: {
        match: '(\\.)([a-z]\\w*)(:)([\\w-]+)'
        captures:
            1: name: 'keyword.operator.foo'
            2: name: 'storage.type.foo'
            3: name: 'keyword.operator.foo'
            4: name: 'markup.quote.foo'
    }
    innerEnvironmentVerbose: {
        match: '(")(\\.)([a-z]\\w*)((\\.)(\\d+))?'
        captures:
            1: name: 'keyword.operator.foo'
            2: name: 'keyword.operator.foo'
            3: name: 'storage.type.foo'
            5: name: 'keyword.operator.foo'
            6: name: 'storage.type.foo'
    }
    annotation: {
        match: '(")(\\.)(\\d+)'
        captures:
            1: name: 'keyword.operator.foo'
            2: name: 'keyword.operator.foo'
            3: name: 'storage.type.foo'
    }
    reference: {
        match: '(")(#)([a-z][\\w-]*)'
        captures:
            1: name: 'keyword.operator.foo'
            2: name: 'keyword.operator.foo'
            3: name: 'storage.type.foo'
    }
    indexedReference: {
        match: '(")(@)(\\d+)'
        captures:
            1: name: 'keyword.operator.foo'
            2: name: 'keyword.operator.foo'
            3: name: 'storage.type.foo'
    }
    inlineMath: {
        match: '(\\$)([^$]+)(\\$)'
        captures:
            1: name: 'keyword.operator.foo'
            2: name: 'markup.quote.foo'
            3: name: 'keyword.operator.foo'
    }
    tailMetablocks: {
        begin: '^[^\\S\\r\\n]{2,}(\\w+)(:)'
        beginCaptures:
            1: name: 'entity.name.tag.yaml'
            2: name: 'punctuation.separator.key-value.yaml'
        end: '^\\s*$'
        patterns: [
            {include: '#inlineMath'}
            {include: '#yamlMetablock'}
        ]
    }
